<?php

namespace common\models;

use common\models\helpers\Session;
use yii\behaviors\TimestampBehavior;
use yii\db\Expression;

class Team extends generated\Team
{
    public function behaviors()
    {
        return [
            [
                'class' => TimestampBehavior::class,
                'createdAtAttribute' => 'created_at',
                'updatedAtAttribute' => 'updated_at',
                'value' => new Expression('NOW()'),
            ],
        ];
    }

    public function afterSave($insert, $changedAttributes)
    {
        if ($insert) {
            $model = new TeamToUser();
            $model->team_id = $this->getPrimaryKey();
            $model->user_id = Session::getUserId();
            if (!$model->save()) {
                return false;
            }
        }
        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
    }

    public static function getAvailableUsers()
    {
        return User::find()->where(['<>', 'id', 1])->andWhere(['<>', 'id', Session::getUserId()])->andWhere(['status' => User::STATUS_ACTIVE])->all();
    }

    public static function getTeamsByUserId(int $user_id)
    {
        return TeamToUser::find()
            ->select('team.name as teamName, team_to_user.*')
            ->join('LEFT JOIN', 'team', 'team.id = team_to_user.team_id')
            ->where(['team_to_user.user_id' => $user_id])
            ->all();
    }

    public static function addTeam(int $user_id, int $team_id)
    {
        $model = new TeamToUser();
        $model->user_id = $user_id;
        $model->team_id = $team_id;
        return $model->save();
    }

    public static function getPlayersByTeamId(int $teamId)
    {
        return TeamToUser::find()
            ->select('team_to_user.*, user.username as uName')
            ->join('LEFT JOIN', 'user', 'user.id = team_to_user.user_id')
            ->where(['team_to_user.team_id' => $teamId])
            ->all();
    }
}